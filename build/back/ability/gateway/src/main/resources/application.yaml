#linux 启动语句 nohup java -jar gateway.jar >log/gateway.log &
#linux 查看日志 tail -f log/gateway.log

# 服务配置
server:
  # 项目端口号 0～65535
  port: 27000
  servlet:
    # 项目名称
    context-path: /
# spring配置
spring:
  application:
    # 项目名称
    name: gateway
  profiles:
    # 设置环境
    active: test
  config:
    # 配置文件路径
    import:
      # 基础配置
      - nacos:${spring.application.name}-base-${spring.profiles.active}.yaml
      # jwt认证配置
      - nacos:jwt-${spring.profiles.active}.yaml?group=system
      # redis 配置
      - nacos:redis-${spring.profiles.active}.yaml?group=system
  cloud:
    nacos:
      # 注册中心
      discovery:
        # ip地址:端口
        server-addr: 127.0.0.1:8848
        # 用户名
        username: fyy
        # 密码
        password: fyyain77
        # 命名空间 不能跨调用 ID
        namespace: 7
        # 集群 区域 机房 可以跨调用
        cluster-name: build
        # 分组 类型 gateway的分组必须与所要链接的服务的分组一致否则无法访问
        group: service
      # 配置中心
      config:
        # ip地址:端口
        server-addr: 127.0.0.1:8848
        # 用户名
        username: fyy
        # 密码
        password: fyyain77
        # 命名空间 不能跨调用 ID
        namespace: 7
        # 集群 区域 机房 可以跨调用
        cluster-name: build
        # 分组 类型 gateway的分组必须与所要链接的服务的分组一致否则无法访问
        group: service

    # 高可用流控防护组件
    sentinel:
      transport:
        # Sentinel 控制台地址
        dashboard: localhost:8948
        # 应用与Sentinel控制台交互的端口，应用本地会起一个该端口占用的HttpServer
        port: 8948
      # 是否提前触发 Sentinel 初始化
      eager: true
      filter:
        # 启用公共过滤器实例
        enabled: false
      log:
        # 日志记录目录
        dir: log/${spring.application.name}-${spring.profiles.active}-sentinel-log
